/* 
 * System to test: tandem queue               
 *                                           
 * 'arr'  tells a new package arrives at q1    
 * 'pass' tells a package passes from q1 to q2 
 * 'exit' tells a package exits q2             
 * Initial clocks: {clkArr,clkPass} in Queue1  
 * 
 */


module Queue1                                    

    q1 : [0..10] init 1;                         
    clkArr : clock;         /* Uniform(0,2) */                 
    clkPass : clock;        /* Exponential(5) */ 

    [arr!] q1 < 10 @ clkArr -> (q1'=q1+1) & (clkArr'= uniform(0,2));  
    [pass!] q1 > 0 @ clkPass -> (q1'=q1-1) & (clkPass'= exponential(5));

endmodule                                       

module Queue2

    q2 : [0..8] init 0;                          
    clkExit : clock;        /* Normal(4,1) */                  

    [pass?] q2<8 -> (q2'=q2+1);
    [pass?] q2==8 -> (q2'=8);
    [exit!] q2 > 0 @ clkExit -> (q2'=q2-1) & (clkExit'= normal(4,1));         

endmodule
                                                        
